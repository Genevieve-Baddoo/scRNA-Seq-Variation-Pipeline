#install.packages("Seurat") #if not currently installed must be installed first
vignette(SRAdb)


library(SRAdb) #access the SRA database library
sqlfile <-'SRAmetadb.sqlite' #allows us to access the database
if(!file.exists('SRAmetadb.sqlite')) sqlfile <<- getSRAdbFile() #create the sql and SRA
sra_con <- dbConnect(SQLite(),sqlfile) #connecting the SRA network

sraInf <- getSRAinfo("", sra_con, sraType = "sra")

sapply(sraInf$run, function(x) try(getSRAfile(x,sra_con, fileType = "sra"),silent=TRUE))


library(GEOquery) #obtaining the 
tmp <- getGEO("GSE74679")
gseInf <- pData(tmp[[1]])
gseInf



#running the pipeline for clustering data
library(dplyr) #import
library(Seurat) #import the Seurat library
library(patchwowrk) #import patchwork
vignette("SRAdb")

pbmc.data <- Read10X() #reading in Geo Data

pbmc <- CreateSeuratObject(coutns = pbmc.data, project "pbmc3k", mincells )

#normalize data function
pbmc <- NormalizeData(pbmc, normalization.method = "LogNormalize", scale.factor = 10000)

#clustering data function
pbmc <- FindNeighbors(pbmc, dims = 1:10)
pbmc <- FindClusters(pbmc, resolution = 0.5)

# find all markers of cluster 1
cluster1.markers <- FindMarkers(pbmc, ident.1 = 2, min.pct = 0.25)
head(cluster1.markers, n = 5)

# find all markers distinguishing cluster 5 from clusters 0 and 3
cluster5.markers <- FindMarkers(pbmc, ident.1 = 5, ident.2 = c(0, 3), min.pct = 0.25)
head(cluster5.markers, n = 5)

# find markers for every cluster compared to all remaining cells, report only the positive ones
pbmc.markers <- FindAllMarkers(pbmc, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.25)
pbmc.markers %>% group_by(cluster) %>% top_n(n = 2, wt = avg_log2FC)

cluster1.markers <- FindMarkers(pbmc, ident.1 = 0, logfc.threshold = 0.25, test.use = "roc", only.pos = TRUE)



